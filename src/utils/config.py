import argparse

def parse_arguments():

    parser = argparse.ArgumentParser(description = "Lazy LLM for SMO")

    parser.add_argument('-d','--dataset', type = str, default = "data/misc/auto93.csv", help = "Dataset [auto93, WineQuality, HPO, ...]")
    parser.add_argument('-m', '--model', type = str, default ="vanilla", help ="Strategy")


    #Explanation
    parser.add_argument('--intermediate', type = bool, default = False, help = "show llm output for each step True/ False")
    
     
    #LLM Configurations
    parser.add_argument('-l','--llm', type = str, default ="llama3-8b", help = "LLM Model [Llama, Mistral, Gemini, GPT, ...]")
    parser.add_argument('-t', '--temperature', type = float, default = 0.5, help =" Temperature of LLM [0.0, 1.0]")
    parser.add_argument('--top_p', type = float, default = 0.8, help ="Focus level on the nucleus of the prompt [0.0, 1.0]")
    parser.add_argument('--max_tokens', type = int, default = 50, help ="Maximum tokens generated by LLM [1 to Max capacity of the Model]")
    parser.add_argument('-q', '--quantization', type = bool, default = False, help = "Run Quantized Model True or False")
    parser.add_argument('--q_bits', type = int, default = 8, help = "Quantization bits [4, 8, 16]")

    #Other Configurations
    parser.add_argument('-s', '--seed', type = int, default = 1234567891, help ="Random seed [1, 1e9+7]")
    parser.add_argument('--last', type = int, default = 7, help ="number of labels [20, 25, 30, 35, 40, 45]")
    parser.add_argument('--label', type = int, default = 4, help = "number of initial labels [4, 5, ...]")
    
    args = parser.parse_args()

    return args

# parse_arguments()


